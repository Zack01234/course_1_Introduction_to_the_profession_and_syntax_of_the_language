import java.time.LocalDate;

public class Main {
    public static void main(String[] args) {
/*1 задача
    Объявите три массива:
    1. Целочисленный массив, заполненный тремя цифрами – 1, 2 и 3 – с помощью ключевого слова new.
    2. Массив, в котором можно хранить три дробных числа – 1.57, 7.654, 9.986 –  сразу заполнив его значениями.
    3. Произвольный массив – тип и количество данных определите сами. Самостоятельно выберите способ создания массива: с помощью ключевого слова или сразу заполненный элементами.
-**Критерии оценки**
    - Целочисленный массив создан с помощью ключевого слова new
    - Массив с дробными числами создан и сразу заполнен значениями
    - Создан любой произвольный массив одним из двух способов, рассмотренных в уроке
    */
        //1 массив
        byte[] array_1 = new byte[3];
        array_1[0] = 1;
        array_1[1] = 2;
        array_1[2] = 3;
        //2 массив
        double[] array_2 = {1.57, 7.654, 9.986};
        //3 массив
        boolean[] array_3 = new boolean[2];
        boolean t = true;
        boolean f = false;
        array_3[0] = t;
        array_3[1] = f;

/*2задача
    Пройдите по каждому из трех массивов и распечатайте все элементы всех трех массивов, начиная с первого элемента, через запятую.
    Запятая между последним элементом одного массива и первым элементом следующего не нужна.
-**Критерии оценки**
    - В консоль выведены все элементы первого массива в верном порядке через запятую
    - В консоль выведены все элементы второго массива в верном порядке через запятую
    - В консоль выведены все элементы третьего массива в верном порядке через запятую
    - На одной строчке расположены элементы только одного массива
    */
        //1 массив
        for (int i = 0; i < array_1.length; i++) {
            System.out.print(array_1[i]);
            if (i != array_1.length - 1) {
                System.out.print(", ");
            }
        }
        System.out.println();
        //2 массив
        for (int i = 0; i < array_2.length - 1; i++) {
            System.out.print(array_2[i] + ", ");
        }
        System.out.println(array_2[array_2.length - 1]);
        //3 массив
        for (int i = 0; i < array_3.length; i++) {
            System.out.print(array_3[i]);
            if (i != array_3.length - 1) {
                System.out.print(", ");
            }
        }
        System.out.println();

/*3 задача
    Теперь ваша задача – распечатать все элементы всех трех массивов, но начинать нужно не с первого элемента массива, а с последнего.
    Элементы должны быть распечатаны через запятую, при этом элементы одного массива располагаются на одной строчке, а элементы другого массива – на другой.
    Запятая между последним элементом одного массива и первым элементом следующего не нужна.
    Если во втором задании в консоль у вас вывелся результат
    1, 2, 3
    1.57, 7.654, 9.986
    *произвольные элементы третьего массива*
                То в третьем задании результат должен быть
    3, 2, 1
    9.986, 7.654, 1.57
    *произвольные элементы третьего массива в обратном порядке*
- Критерии оценки
    - В консоль выведены все элементы первого массива в обратном порядке через запятую
    - В консоль выведены все элементы второго массива в обратном порядке через запятую
    - В консоль выведены все элементы третьего массива в обратном порядке через запятую
    - На одной строчке расположены элементы только одного массива
    */
        //1 массив
        for (int i = array_1.length - 1; i > 0; i--) {
            System.out.print(array_1[i] + ", ");
        }
        System.out.println(array_1[0]);
        //2 массив
        for (int i = array_2.length - 1; i > 0; i--) {
            System.out.print(array_2[i] + ", ");
        }
        System.out.println(array_2[0]);
        //3 массив
        for (int i = array_3.length - 1; i > 0; i--) {
            System.out.print(array_3[i] + ", ");
        }
        System.out.println(array_3[0]);

/*4 задача
    Пройдитесь по первому целочисленному массиву и все нечетные числа в нем сделайте четными (нужно прибавить 1).
    Важно: код должен работать с любым целочисленным массивом, поэтому для решения задания вам нужно использовать циклы.
    Распечатайте результат преобразования в консоль.
- Критерии оценки
    - Все нечетные числа в целочисленном массиве четные с помощью прибавления 1
    - В консоли распечатан только целочисленный массив
    */
        for (int i = 0; i < array_1.length; i++) {
            if (array_1[i] % 2 != 0) {
                array_1[i]++;
            }
            System.out.print(array_1[i]);
            if (i != array_1.length - 1) {
                System.out.print(", ");
            }

        }
    }

}

